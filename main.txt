'''
start of the code, this code is using Python, Mu-editor, and metro board.
Made by Andy and Tiga in Mr.Weinberg's Advanced Automation class.
'''
# Write your code here :-)
#the closer the item is to sensor, the bigger the value is.
import time
import board
from analogio import AnalogIn
from digitalio import DigitalInOut

sensor_1 = AnalogIn(board.A1)
sensor_2 = AnalogIn(board.A2)
sensor_3 = AnalogIn(board.A3)
button = DigitalInOut(board.D0)
button.direction.INPUT
#setting up sensor with pin

raw_data = []
speed_data = []
curve_data = []
#setting up list to store data

sleep_time = 1
start = True
old1 = sensor_1.value
old2 = sensor_2.value
old3 = sensor_3.value
#setting up variables











#Apr 27th, Mr.Weinberg said that we don't need to worry about the logic first this code should focus on getting the data.
#Then, we can copy the serials into csv file and smooth it with the code we have on repl.
#And make another analysis code on repl.
'''
while True:
    print("test:" + str(sensor_1.value) + ", " + str(sensor_2.value) + ", " + str(sensor_3.value))
    if start:
        # so the purpose is to make the sensors detect if there are anything infront of them.
        check1 = 0
        check2 = 0
        check3 = 0
        current_time = time.monotonic()
        current1 = sensor_1.value
        current2 = sensor_2.value
        current3 = sensor_3.value
        if current1 - old1 >= 1000:
            #if the sensor detects something closer, it will record the data.
            raw_data.append([current_time, current1])
            check1 = 1
            
        if current2 - old1 >= 1000:
            raw_data.append([current_time, current2])
            check2 = 1
            
        if current2 - old1 >= 1000:
            raw_data.append([current_time, current2])
            check3 = 1
        
        if check1 + check2 + check3 == 3:
            #this means the ball has passed all the sensors.
            start = False
            #stop getting data
        
    else:
        if button.value:
            start = True
        #if the user press the button, it will get data again.
        pass
    #print("{0},{1}".format(row[0], row[1]))
    time.sleep(sleep_time)
'''
    
